generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model access {
  id        Int     @id @default(autoincrement())
  id_prefix String  @default("acc-") @db.Char(5)
  name      Int
  users     users[]
}

model access_points {
  id           Int            @id @default(autoincrement())
  id_prefix    String         @default("acc-") @db.Char(5)
  area_id      Int
  name         String         @db.Char(30)
  lat          Decimal        @db.Decimal(9, 6)
  longitude    Decimal        @db.Decimal(9, 6)
  areas        areas          @relation(fields: [area_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKaccess_poi369117")
  measurements measurements[]

  @@index([area_id], map: "FKaccess_poi369117")
}

model announcements {
  id         Int      @id @default(autoincrement())
  id_prefix  String   @default("ann-") @db.Char(5)
  usersid    Int
  name       String   @db.Char(255)
  message    String?  @default("No Message") @db.VarChar(255)
  created_at DateTime @default(now()) @db.DateTime(0)
  users      users    @relation(fields: [usersid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKannounceme740387")

  @@index([usersid], map: "FKannounceme740387")
}

model areas {
  id            Int             @id @default(autoincrement())
  id_prefix     String          @default("are-") @db.Char(5)
  name          String          @db.Char(30)
  lat           Decimal         @db.Decimal(9, 6)
  longitude     Decimal         @db.Decimal(9, 6)
  access_points access_points[]
  users         users[]
}

model logs {
  id         Int      @id @default(autoincrement())
  id_prefix  String   @default("log-") @db.Char(5)
  loger_id   String   @db.Char(15)
  loger_name String   @default("System") @db.Char(30)
  created_at DateTime @default(now()) @db.DateTime(0)
  message    String   @default("No Message") @db.VarChar(255)
}

model measurements {
  id              Int           @id @default(autoincrement())
  id_prefix       String        @default("mea-") @db.Char(5)
  sensor_id       Int
  access_point_id Int
  created_at      DateTime      @default(now()) @db.DateTime(0)
  location        String        @db.Char(255)
  other_data      String        @db.VarChar(255)
  sensors         sensors       @relation(fields: [sensor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKmeasuremen1268")
  access_points   access_points @relation(fields: [access_point_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKmeasuremen498651")

  @@index([access_point_id], map: "access_point_id")
  @@index([sensor_id], map: "sensor_id")
}

model miners {
  id         Int      @id @default(autoincrement())
  id_prefix  String   @default("min-") @db.Char(5)
  name       String   @default("No Name") @db.Char(20)
  email      String   @default("system@email.com") @db.Char(100)
  status     Boolean  @default(true)
  created_at DateTime @default(now()) @db.DateTime(0)
  created_by String   @default("System") @db.Char(20)
  updated_at DateTime @default(now()) @db.DateTime(0)
  updated_by String   @default("System") @db.Char(20)
  user_id    Int
  shift_id   Int
  sensor_id  Int
  sensors    sensors  @relation(fields: [sensor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKminers201161")
  shifts     shifts   @relation(fields: [shift_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKminers229400")
  users      users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKminers594447")

  @@index([sensor_id], map: "FKminers201161")
  @@index([shift_id], map: "shift_id")
  @@index([status], map: "status")
  @@index([user_id], map: "user_id")
}

model sensor_alerts {
  id         Int      @id @default(autoincrement())
  id_prefix  String   @default("ale-") @db.Char(5)
  sensor_id  Int
  name       String   @db.Char(50)
  status     String   @default("1") @db.Char(255)
  created_at DateTime @default(now()) @db.DateTime(0)
  sensors    sensors  @relation(fields: [sensor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKsensor_ale45012")

  @@index([sensor_id], map: "sensor_id")
  @@index([status], map: "status")
}

model sensors {
  id            Int             @id @default(autoincrement())
  id_prefix     String          @default("sen-") @db.Char(5)
  status        Boolean         @default(false)
  device_id     String?         @unique(map: "device_id") @db.Char(50)
  available     Boolean         @default(true)
  updated_by    String          @default("System") @db.Char(20)
  updated_at    DateTime        @default(now()) @db.DateTime(0)
  created_by    String          @db.Char(20)
  created_at    DateTime        @default(now()) @db.DateTime(0)
  measurements  measurements[]
  miners        miners[]
  sensor_alerts sensor_alerts[]

  @@index([available], map: "available")
  @@index([status], map: "status")
}

model settings {
  user_id             Int     @id
  app_notifications   Boolean @default(true)
  email_notifications Boolean @default(true)
  dark_mode           Boolean @default(false)
  users               users   @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "FKsettings81676")
}

model shifts {
  id        Int      @id @default(autoincrement())
  id_prefix String   @default("shi-") @db.Char(5)
  name      String   @db.Char(10)
  miners    miners[]
}

model user_roles {
  id        Int     @id @default(autoincrement()) @db.TinyInt
  id_prefix String  @default("rol-") @db.Char(255)
  name      String  @default("Day") @db.Char(10)
  users     users[]
}

model users {
  id              Int             @id @default(autoincrement())
  id_prefix       String          @default("user-") @db.Char(5)
  name            String          @default("No Name") @db.Char(20)
  email           String          @unique(map: "email") @default("system@email.com") @db.Char(100)
  password        String          @db.VarChar(255)
  user_role_id    Int             @db.TinyInt
  created_by      String          @default("System") @db.Char(20)
  created_at      DateTime        @default(now()) @db.DateTime(0)
  updated_by      String          @default("System") @db.Char(20)
  updated_at      DateTime        @default(now()) @db.DateTime(0)
  phone           String          @db.Char(11)
  access_id       Int
  access_point_id Int
  announcements   announcements[]
  miners          miners[]
  settings        settings?
  areas           areas           @relation(fields: [access_point_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKusers375527")
  access          access          @relation(fields: [access_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKusers50369")
  user_roles      user_roles      @relation(fields: [user_role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKusers895240")

  @@index([access_point_id], map: "FKusers375527")
  @@index([access_id], map: "FKusers50369")
  @@index([user_role_id], map: "FKusers895240")
}
